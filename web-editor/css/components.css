/* 组件样式文件 - components.css */

/* 图层列表 */
.layers-list {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.layer-item {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    transition: all var(--transition-fast);
    background: var(--bg-primary);
    border: 1px solid transparent;
}

.layer-item:hover {
    background: var(--bg-secondary);
}

.layer-item.selected {
    background: var(--primary-color);
    color: var(--text-white);
}

.layer-item.selected .layer-controls button {
    color: var(--text-white);
}

.layer-visibility {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    background: transparent;
    cursor: pointer;
    color: var(--text-secondary);
}

.layer-visibility:hover {
    color: var(--text-primary);
}

.layer-info {
    flex: 1;
    min-width: 0;
}

.layer-name {
    font-size: 13px;
    font-weight: 500;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.layer-type {
    font-size: 11px;
    opacity: 0.7;
}

.layer-controls {
    display: flex;
    gap: 4px;
    opacity: 0;
    transition: opacity var(--transition-fast);
}

.layer-item:hover .layer-controls {
    opacity: 1;
}

.layer-controls button {
    width: 20px;
    height: 20px;
    border: none;
    background: transparent;
    color: var(--text-secondary);
    cursor: pointer;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.layer-controls button:hover {
    background: rgba(0, 0, 0, 0.1);
}

/* 对象库 */
.object-categories {
    display: flex;
    flex-direction: column;
    gap: 4px;
    margin-bottom: 16px;
}

.category {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    transition: all var(--transition-fast);
    font-size: 13px;
    font-weight: 500;
    color: var(--text-secondary);
}

.category:hover {
    background: var(--bg-secondary);
    color: var(--text-primary);
}

.category.active {
    background: var(--primary-color);
    color: var(--text-white);
}

.objects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
    gap: 8px;
}

.object-item {
    aspect-ratio: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 4px;
    padding: 8px;
    border: 2px dashed var(--border-medium);
    border-radius: 8px;
    cursor: pointer;
    transition: all var(--transition-fast);
    background: var(--bg-primary);
}

.object-item:hover {
    border-color: var(--primary-color);
    background: var(--bg-secondary);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.object-item i {
    font-size: 20px;
    color: var(--text-secondary);
}

.object-item:hover i {
    color: var(--primary-color);
}

.object-item span {
    font-size: 10px;
    font-weight: 500;
    text-align: center;
    color: var(--text-secondary);
}

.object-item:hover span {
    color: var(--text-primary);
}

/* 模态对话框 */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-normal);
}

.modal-overlay.show {
    opacity: 1;
    visibility: visible;
}

.modal {
    background: var(--bg-primary);
    border-radius: 12px;
    box-shadow: var(--shadow-xl);
    max-width: 600px;
    width: 90%;
    max-height: 80vh;
    overflow: hidden;
    transform: scale(0.9);
    transition: transform var(--transition-normal);
}

.modal-overlay.show .modal {
    transform: scale(1);
}

.modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px 24px;
    border-bottom: 1px solid var(--border-light);
}

.modal-header h3 {
    font-size: 18px;
    font-weight: 600;
    color: var(--text-primary);
}

.modal-content {
    padding: 24px;
    max-height: 60vh;
    overflow-y: auto;
}

.modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    padding: 20px 24px;
    border-top: 1px solid var(--border-light);
    background: var(--bg-secondary);
}

.modal-close {
    color: var(--text-secondary);
}

.modal-close:hover {
    color: var(--text-primary);
}

/* 模板网格 */
.template-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 16px;
    margin-top: 12px;
}

.template-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 16px;
    border: 2px solid var(--border-light);
    border-radius: 8px;
    cursor: pointer;
    transition: all var(--transition-fast);
}

.template-item:hover {
    border-color: var(--primary-color);
    background: var(--bg-secondary);
}

.template-item.active {
    border-color: var(--primary-color);
    background: rgba(37, 99, 235, 0.1);
}

.template-preview {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-secondary);
    border-radius: 8px;
    margin-bottom: 8px;
}

.template-preview i {
    font-size: 24px;
    color: var(--text-secondary);
}

.template-item.active .template-preview i {
    color: var(--primary-color);
}

.template-item span {
    font-size: 13px;
    font-weight: 500;
    text-align: center;
    color: var(--text-secondary);
}

.template-item.active span {
    color: var(--primary-color);
}

/* 空状态 */
.no-selection {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 40px 20px;
    text-align: center;
    color: var(--text-secondary);
}

.no-selection i {
    font-size: 48px;
    margin-bottom: 16px;
    opacity: 0.5;
}

.no-selection p {
    font-size: 14px;
    line-height: 1.5;
}

/* 属性编辑器 */
.property-group {
    margin-bottom: 20px;
}

.property-group:last-child {
    margin-bottom: 0;
}

.property-group-title {
    font-size: 13px;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 12px;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--border-light);
}

.property-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 12px;
}

.property-label {
    font-size: 13px;
    color: var(--text-secondary);
    min-width: 80px;
}

.property-input {
    flex: 1;
    margin-left: 12px;
}

.color-input {
    display: flex;
    align-items: center;
    gap: 8px;
}

.color-preview {
    width: 24px;
    height: 24px;
    border-radius: 4px;
    border: 1px solid var(--border-medium);
    cursor: pointer;
}

.range-input {
    width: 100%;
}

/* 工具栏工具 */
.tool-btn {
    width: 36px;
    height: 36px;
    border: none;
    background: transparent;
    color: var(--text-secondary);
    cursor: pointer;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-fast);
}

.tool-btn:hover {
    background: var(--bg-tertiary);
    color: var(--text-primary);
}

.tool-btn.active {
    background: var(--primary-color);
    color: var(--text-white);
}

/* 缩放控制 */
.zoom-controls {
    display: flex;
    align-items: center;
    gap: 8px;
}

.zoom-controls span {
    font-size: 13px;
    font-weight: 500;
    color: var(--text-secondary);
    min-width: 40px;
    text-align: center;
}

/* 动画效果 */
.fade-in {
    animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.slide-in-left {
    animation: slideInLeft 0.3s ease-out;
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.slide-in-right {
    animation: slideInRight 0.3s ease-out;
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(20px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}