// 圆周率π推导演示 - 使用正多边形逼近圆的方法
scene 1200 800 "pi_derivation"

// 创建参考圆
create circle reference_circle 150 (400, 400)
set reference_circle.color = "#3366CC"
set reference_circle.opacity = 0.3

// 标题文本
create text title "圆周率π的推导演示" 32 (600, 750)
set title.color = "#2C3E50"

create text subtitle "正多边形逼近圆的方法" 24 (600, 700)
set subtitle.color = "#34495E"

// 保存初始状态
save "pi_derivation_start"
render

// 第一步：正三角形
create text step1 "第1步: 正三角形 (3边)" 20 (600, 550)
set step1.color = "#C0392B"

// 创建正三角形的三条边
create line triangle_side1 (400, 250) (530, 475)
set triangle_side1.color = "#E74C3C"

create line triangle_side2 (530, 475) (270, 475)
set triangle_side2.color = "#E74C3C"

create line triangle_side3 (270, 475) (400, 250)
set triangle_side3.color = "#E74C3C"

create text triangle_result "π ≈ 2.598 (误差很大)" 18 (600, 500)
set triangle_result.color = "#E74C3C"

save "pi_derivation_triangle"
render

// 第二步：正六边形
create text step2 "第2步: 正六边形 (6边)" 20 (600, 450)
set step2.color = "#D35400"

// 创建六边形边
create line hex_side1 (550, 325) (550, 475)
set hex_side1.color = "#D35400"

create line hex_side2 (550, 475) (400, 550)
set hex_side2.color = "#D35400"

create line hex_side3 (400, 550) (250, 475)
set hex_side3.color = "#D35400"

create text hex_result "π ≈ 3.000 (更接近了)" 18 (600, 400)
set hex_result.color = "#D35400"

save "pi_derivation_hexagon"
render

// 第三步：正八边形
create text step3 "第3步: 正八边形 (8边)" 20 (600, 350)
set step3.color = "#27AE60"

// 添加更多边形成八边形
create line oct_side1 (525, 280) (525, 320)
set oct_side1.color = "#27AE60"

create line oct_side2 (525, 520) (480, 530)
set oct_side2.color = "#27AE60"

create text oct_result "π ≈ 3.061 (越来越精确)" 18 (600, 300)
set oct_result.color = "#27AE60"

save "pi_derivation_octagon"
render

// 最终结果
create text final_text "边数越多，π的估算值越精确！" 20 (600, 200)
set final_text.color = "#8E44AD"

create text pi_actual "π的实际值: 3.14159265..." 18 (600, 170)
set pi_actual.color = "#8E44AD"

save "pi_derivation_complete"
render

save "pi_derivation_complete"

render
